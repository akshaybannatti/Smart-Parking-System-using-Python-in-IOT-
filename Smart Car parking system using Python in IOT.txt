import RPi.GPIO as GPIO
import time

# Define the GPIO pins for ultrasonic sensors
TRIGGER_PIN = 18
ECHO_PIN = 24

# Set up GPIO mode and pins
GPIO.setmode(GPIO.BCM)
GPIO.setup(TRIGGER_PIN, GPIO.OUT)
GPIO.setup(ECHO_PIN, GPIO.IN)

def measure_distance():
    # Trigger ultrasonic pulse to measure distance
    GPIO.output(TRIGGER_PIN, GPIO.HIGH)
    time.sleep(0.00001)
    GPIO.output(TRIGGER_PIN, GPIO.LOW)

    # Measure the time it takes for the pulse to return
    pulse_start = time.time()
    pulse_end = time.time()
    while GPIO.input(ECHO_PIN) == 0:
        pulse_start = time.time()
    while GPIO.input(ECHO_PIN) == 1:
        pulse_end = time.time()

    # Calculate the distance based on the time difference
    pulse_duration = pulse_end - pulse_start
    distance = pulse_duration * 17150  # Speed of sound in cm/s
    distance = round(distance, 2)
    return distance

def is_parking_space_available():
    # Measure the distance using ultrasonic sensor
    distance = measure_distance()

    # Set a threshold distance for parking space availability
    threshold_distance = 10  # Adjust this value according to your setup

    # Check if a parking space is available
    if distance > threshold_distance:
        return True
    else:
        return False

def main():
    try:
        while True:
            # Check if a parking space is available
            if is_parking_space_available():
                print("Parking space available")
            else:
                print("Parking space occupied")

            # Wait for a few seconds before checking again
            time.sleep(5)

    except KeyboardInterrupt:
        # Clean up GPIO settings on program exit
        GPIO.cleanup()

if __name__ == '__main__':
    main()
